// Generated by CoffeeScript 1.6.3
var Also, localExports, nodeExport,
  __slice = [].slice;

localExports = {
  validate: {},
  inject: {},
  deferred: {},
  sequence: {},
  pipeline: {},
  parallel: {},
  enclose: {},
  schedule: {},
  match: {},
  util: {},
  root: {}
};

nodeExport = function(ontoObject) {
  var submoduleName;
  for (submoduleName in localExports) {
    Object.defineProperty(ontoObject, submoduleName, {
      enumerable: true,
      value: require("./" + submoduleName)
    });
  }
  return ontoObject;
};

Also = function() {
  var args, definitions, exporter, futureArgs, moduleFactoryFn, objectName, root, _i, _results;
  args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  exporter = args[0], futureArgs = 3 <= args.length ? __slice.call(args, 1, _i = args.length - 1) : (_i = 1, []), moduleFactoryFn = args[_i++];
  root = {
    context: {}
  };
  nodeExport(root);
  _results = [];
  for (objectName in (definitions = moduleFactoryFn(root))) {
    _results.push(exporter[objectName] = definitions[objectName]);
  }
  return _results;
};

module.exports = nodeExport(Also);
